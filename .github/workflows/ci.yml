name: CI

on:
  pull_request:
    branches: [ master, main ]
  push:
    branches: [ master, main ]

permissions:
  contents: write
  statuses: write
  checks: write
  pull-requests: write

jobs:
  set-version:
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0 
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: set global dir
        run: git config --system --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: '5.x'
      - name: Set SemVer Version
        uses: gittools/actions/gitversion/execute@v1
        id: gitversion

  pr:
    runs-on: ubuntu-22.04
    needs: set-version
    env:
      REVISION: $GITHUB_SHA
      SEMVER: ${{ needs.set-version.outputs.semVer }}
    steps:
      - uses: actions/checkout@v4

      - uses: ensono/actions/eirctl-setup@v0.3.1
        with: 
          version: latest
          isPrerelease: false

      - name: prep-git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.email ${{ github.actor }}-ci@gha.org
          git config user.name ${{ github.actor }}

      - name: Run linters
        run: |
          echo 'eirctl run vuln:check'

      - name: Unit Tests
        run: |
          eirctl run unit:test:run

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          report_paths: '.coverage/report-junit.xml'
          commit: ${{ github.sha }}
          fail_on_failure: true
          check_name: aws-cli-auth Unit Tests

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectVersion=${{ needs.set-version.outputs.semVer }}
